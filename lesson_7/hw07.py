"""
== Лото ==
Правила игры в лото.
Игра ведется с помощью специальных карточек, на которых отмечены числа,
и фишек (бочонков) с цифрами.
Количество бочонков — 90 штук (с цифрами от 1 до 90).
Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86
--------------------------
В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается
случайная карточка.
Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.
Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.

Побеждает тот, кто первый закроет все числа на своей карточке.
Пример одного хода:
Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87
      16 49    55 77    88
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)
Подсказка: каждый следующий случайный бочонок из мешка удобно получать
с помощью функции-генератора.
Подсказка: для работы с псевдослучайными числами удобно использовать
модуль random: http://docs.python.org/3/library/random.html
"""
import random
import sys


class Player:
    def __init__(self, name):
        self.card = sorted(random.sample(range(1, 91), 15))
        self.name = name
        self.crossed_out = 0

    def print_card(self):
        print(f"{self.name:-^26}")
        print(f"{self.card[0]:2} {self.card[3]:2}       {self.card[6]:2}    {self.card[9]:2}    {self.card[12]:2}")
        print(f"{self.card[1]:2}    {self.card[4]:2}    {self.card[7]:2} {self.card[10]:2}    {self.card[13]:2}")
        print(f"{self.card[2]:2} {self.card[5]:2}    {self.card[8]:2}       {self.card[11]:2}    {self.card[14]:2}")
        print("--------------------------")

    def check_number(self, number):
        try:
            self.card[self.card.index(number)] = '--'
            self.crossed_out += 1
            if self.crossed_out == 15:
                print(f"{self.name} победил! Поздравляю!")
                self.print_card()
                sys.exit()
            return False
        except ValueError:
            return True


player = Player('Player')
comp = Player('Компьютер')

kegs_bag = (i for i in random.sample(range(1, 91), 90))

for i in range(89, -1, -1):
    keg = next(kegs_bag)
    print(f"Новый бочонок: {keg} (осталось {i})")
    player.print_card()
    comp.print_card()

    command = input("Зачеркнуть цифру? (y/n)")
    if command == 'y':
        if player.check_number(keg):
            print("Числа на карточки нет! Вы проиграли.")
            break
    elif command == 'n':
        if not player.check_number(keg):
            print("Вы не заметили число на карточке! Вы проиграли.")
            break
    elif command == 'q':
        break
    else:
        print("Неверно указана команда!")

    comp.check_number(keg)
